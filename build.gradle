plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.60"
    id "org.jetbrains.kotlin.kapt" version "1.3.60"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.60"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"
}

version "0.1"
group "cn.hillwind.micronaut"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
}

dependencies {
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation "io.micronaut:micronaut-runtime"

    implementation "io.micronaut:micronaut-validation"
    compileOnly "io.swagger.core.v3:swagger-annotations"

    kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
    kapt "io.micronaut.configuration:micronaut-openapi:1.3.4"
    kapt "io.micronaut:micronaut-inject-java"

    kaptTest platform("io.micronaut:micronaut-bom:$micronautVersion")
    kaptTest "io.micronaut:micronaut-inject-java"

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    runtimeOnly "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"

    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "io.micronaut.test:micronaut-test-kotlintest"
    testImplementation "io.mockk:mockk:1.9.3"
    testImplementation "io.kotlintest:kotlintest-runner-junit5:3.3.2"

}

test.classpath += configurations.developmentOnly

mainClassName = "demo.Application"

test {
    useJUnitPlatform()
}

allOpen {
    annotation("javax.inject.Singleton")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        //Will retain parameter names for Java reflection
        javaParameters = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        javaParameters = true
    }
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

test {
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}
